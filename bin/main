class TicTacToe
    
    def initialize
      @board = [" "," "," "," "," "," "," "," "," "]
      @name1 
      @name2 
      @player = "X"
    end
    def user_interface
        puts "WELCOME TO TIC TAC TOE YOU WILL LOVE IT"
        puts "---------------------------------------\n\n"
        print "Player 1 name "
        @name1 = gets.chomp.capitalize!
        puts " "
        print "Player 2 name "
        @name2 = gets.chomp.capitalize!
        puts " "
        puts "----------------------------------------------------------------------"
        puts "|#{@name1} and #{@name2}. You Both are going to be oponent for this Game|"
        puts "----------------------------------------------------------------------"
        puts " "
        puts "Below is the Game board you can type your turn that is Specified in the Board"
        puts " "
        display_board(@board)
        Play(@board,@player,@name1,@name2)

    end
    def Play(board,player,name1,name2)
        i = 0
        while i < 9
          turn(@board,player,name1,name2)
          i += 1
        end
    end

    def turn_count(board)
        counter = 0
        board.each do |check|
            if check == "X" || check == "O"
                counter += 1
            end
        end
      counter
    end

    def current_player(board,player)
        if turn_count(board) % 2 == 0 
            player = "X"
        else
            player = "O"
        end
    end
    def display_board(board)
        puts " #{board[0]} | #{board[1]} | #{board[2]} "
        puts "-----------"
        puts " #{board[3]} | #{board[4]} | #{board[5]} "
        puts "-----------"
        puts " #{board[6]} | #{board[7]} | #{board[8]} "
        puts " "
    end
    def name_turn(board,player,name1,name2)
        if current_player(board,player) == "X"
            name1
        else
            name2
        end
    end
    def turn(board,player,name1,name2)
       puts "Its #{ name_turn(board,player,name1,name2)} turn, your Token is #{current_player(board,player)}"
       puts "enter no to take position 1-9"
       input = gets.strip
       index = input_to_index(input)
       if valid_move?(board,index)
           move(board,index,player)
           display_board(board)
        else
            puts "invalid move Type again"
        end
    end
    
    def input_to_index(input)
       index = input.to_i - 1
    end

    def move(board,index,value)
        player = current_player(board,value)
            board[index] = player
    end

    def position_taken?(board,index)
        if board[index] == "X" || board[index] == "O"
            true
        else
            false
        end
    end
    
    def valid_move?(board,index)
        if position_taken?(board,index) == false && index.between?(0,8)
            true
        else
            false
        end
    end
end
tic_tac_game = TicTacToe.new
tic_tac_game.user_interface
